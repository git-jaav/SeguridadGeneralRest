#Esta configuración puede estar controlada por CONFIG SERVER

#######################################################
###  CONFIG GENERAL
#######################################################

###Relacionado a Spring - Hibernate

spring:  
  profiles:
     active: dev
     #active: dev-ab
     
  aop:
    proxy-target-class: false
    
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.1.41:3306/seguridadgeneral
    username: root
    password: 1234   
 #Tunear parametros para reconección y tiempo fuera de conexión
    testOnBorrow: true
    #removeAbandonedTimeout: 1800
    #removeAbandoned: true    
    validation-query: SELECT 1 
    logAbandoned: true    
    validation-query-timeout: 30000 
    minEvictableIdleTimeMillis: 60000    
    maxWait: 60000
    maxIdle: 1
    minIdle: 0
    maxActive: 50
    initialSize: 1
    test-on-connect: true
        
#    tomcat:
#      test-on-borrow: true
#      test-while-idle: true
#      time-between-eviction-runs-millis: 360000
#      validation-query: SELECT 1 
#      test-on-connect: true

  jpa:    
    properties:
      hibernate:                             
        current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext
        naming_strategy:  org.hibernate.cfg.DefaultNamingStrategy
        #naming-strategy:  org.hibernate.cfg.ImprovedNamingStrategy
        dialect: org.hibernate.dialect.MySQLDialect        
        #dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
        show_sql: true
        format_sql: true          
        packagesToScan: pe.jaav.sistemas.seguridadgeneral.model        

#######################################################
###  CONFIG DE PROFILES
#######################################################

#######################################################
####PROFILE DEV CON ADMIN BOOT
---
spring:
  profiles: dev-ab
  boot:
    admin:
      url: http://localhost:1001
      username: admin
      password: 51573m45
server:
  port: ${vcap.application.port:7071}

####PROFILE DEV GENERAL ADMIN BOOT
---
spring:
  profiles: dev, dev-ab
  application:
    name: seguridadDev
    
server:
  port: ${vcap.application.port:7072}

eureka:
  client:
      enabled: false
      
####PROFILE DEV CON DISCOVERY SERVER
---
spring:
  profiles: dev-disc
  application:
    name: seguridadDev
    
server:
  port: ${vcap.application.port:7071}          

eureka:
  client:
      enabled: true
      register-with-eureka: true  
      serviceUrl:
        defaultZone:  http://192.168.1.115:8002/eureka/  
        #defaultZone:  http://192.168.1.115:8002/
  instance:
    #instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    
          
#######################################################
####PROFILE LOCAL CON ADMIN BOOT
---
spring:
  profiles: local-ab
  boot:
    admin:
      url: http://localhost:1001
      username: admin
      password: 51573m45
server:
  port: ${vcap.application.port:8071}
---
#######################################################
####PROFILE LOCAL SIN ADMIN BOOT
spring:
  profiles: local, local-ab
  application:
    name: seguridadLocal    
           
server:
  port: ${vcap.application.port:8071}

eureka:
  client:
      enabled: false
###RUN PROFILES
#java -jar -Dspring.profiles.active=local SeguridadGeneralRest-0.0.1-SNAPSHOT.jar
#java -jar -Dspring.profiles.active=dev SeguridadGeneralRest-0.0.1-SNAPSHOT.jar


###RUN MVN DOCKER
#mvn package docker:build